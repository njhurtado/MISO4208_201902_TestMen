{
    "script": "return (function unleashGremlins(ttl, callback) {\n  function stop() {\n    horde.stop();\n    callback();\n  }\n\n\n  //Determina el tipo de navegador para invocar la función que estblece la correspondencia con el tipo de componente\n  function matchesSelector(el, selector) {\n    if (el.webkitMatchesSelector) {\n        matchesSelector = function(el, selector) {\n            return el.webkitMatchesSelector(selector);\n        };\n    } else if (el.mozMatchesSelector) {\n        matchesSelector = function(el, selector) {\n            return el.mozMatchesSelector(selector);\n        };\n    } else if (el.msMatchesSelector) {\n        matchesSelector = function(el, selector) {\n            return el.msMatchesSelector(selector);\n        };\n    } else if (el.oMatchesSelector) {\n        matchesSelector = function(el, selector) {\n            return el.oMatchesSelector(selector);\n        };\n    } else {\n        throw new Error('Novegador no soportado');\n    }\n    return matchesSelector(el, selector);\n  }\n\n  //Crea la horda de gremlins seleccionado el tipo de componentes que son diligenciables y los alementos a los cuales se puede hacer clic, para hacer más eficiente la prueba\n  var horde = window.gremlins.createHorde()\n  .gremlin(gremlins.species.formFiller()\n  .canFillElement(function(element) {\n    return document.body.contains(element) && (matchesSelector(element, \"textarea\") || matchesSelector(element, 'input[type=\"text\"]') || matchesSelector(element, 'input[type=\"password\"]') || matchesSelector(element, 'input[type=\"number\"]') || matchesSelector(element, 'input[type=\"email\"]'));\n  }))\n  .gremlin(gremlins.species\n    .clicker()\n    .clickTypes(['click'])\n    .canClick(function(element) {\n      return document.body.contains(element) && (matchesSelector(element, \"a\") || matchesSelector(element, \"button\"));\n  }))\n  //se le da más prioridad al gremlin clicker [clicker,formFiller,toucher,scroller ]\n  horde.strategy(gremlins.strategies.distribution()\n   .delay(50)\n   .distribution([0.6,0.4])\n  );\n  \n  horde.seed(1234);\n\n  horde.after(callback);\n  window.onbeforeunload = stop;\n  setTimeout(stop, ttl);\n  horde.unleash();\n}).apply(null, arguments)",
    "args": [
        50000
    ]
}